Day 2
========================================
52.66.251.186
=========================
https://www.devopsschool.com/tutorial/docker/commands/


diff
	added
	updated
	deleted

https://success.docker.com/article/how-do-i-enable-the-remote-api-for-dockerd
https://forums.docker.com/t/connecting-via-unix-socket-to-the-docker-daemon/17396/3


 308  ls
  309  touch devopsschool.txt
  310  ls
  311  vi devopsschool.txt
  312  more devopsschool.txt
  313  ls
  314  docker ps
  315  docker cp devopsschool.txt 9db7cf7919c5:/opt
  316  clear
  317  docker ps
  318  docker exec 9db7cf7919c5 ls /opt/
  319  docker exec 9db7cf7919c5 more /opt/devopsschool.txt
  320  clear
  321  ls
  322  ls
  323  rm -rf devopsschool.txt
  324  ls
  325  docker cp 9db7cf7919c5:/opt/devopsschool.txt .
  326  ls
  327  more devopsschool.txt
  328  clear
  329  docker ps
  330  docker attach 9db7cf7919c5
  331  clear
  332  ls
  333  docker ps
  334  docker diff 9db7cf7919c5
  335  clear
  336  docker ps
  337  docker port 9db7cf7919c5
  338  docker run -d -p 8080:8080 jenkins
  339  docker ps
  340  docker port f06e9c589d3d
  341  clear
  342  docker ps
  343  docker rename f06e9c589d3d dev2
  344  docker ps
  345  clear
  346  ls
  347  docker run -itd --name dev3 ubuntu
  348  docker ps
  349  clear
  350  docker help run
  351  clear
  352  ls
  353  docker help
  354  clear
  355  docker ps
  356  docker exec -it f06e9c589d3d /bin/bash
  357  clear
  358  ls
  359  docker ps
  360  docker attach 7acdc2f96b51
  361  clear
  362  clear
  363  docker ps
  364  docker logs 7acdc2f96b51
  365  docker logs f06e9c589d3d
  366  clear
  367  ls
  368  docker ps
  369  docker help ps
  370  clear
  371  clear
  372  docker ps
  373  docker stats
  374  docker stats 7acdc2f96b51
  375  clear
  376  docker ps
  377  clear
  378  ps -eaf | grep docker
  379  cleatr
  380  clear
  381  docker ps
  382  docker top 7acdc2f96b51
  383  cler
  384  clear
  385  docker events
  386  clear
  387  docker images
  388  clear
  389  docker info
  390  clear
  391  history
293  docker help start
  294  docker help run
  295  clear
  296  docker help create
  297  clear
  298  ls
  299  clear
  300  docker run -itd ubuntu
  301  docker ps -a
  302  clear
  303  ps -eaf
  304  c
  305  clear
  306  clear
  307  docker pull jfrog-docker-reg2.bintray.io/jfrog/artifactory-pro:6.1.0
  308  clear
  309  docker images
  310  clear
  311  docker info
  312  clear
  313  history
=====================================================================================
=====================================================================================
What is filesystem?
- kind 
	We create
	OS
OS
=======================
BOOTFS + ROOTFS + APPFS

What is Image?
====================================
Collection of filesystem(s)

ROOTFS + APPFS

each filesystem - we can call it layer.
	.ie. -- image has multiple layers. 

in Image -
	layer o - ROOTFS 		Read ONLY
	LAYER 1 - APPFS - JAVA		Read ONLY
	LAYER 2 - APPFS - TOMCAT	Read ONLY	
	LAYER 3 - APPFS - NGINX		Read ONLY
	LAYER 4 - APPFS - UPDATE	Read ONLY
	----------image--------------

WHEN YOU RUN
----------------
ALL Layers get merged into - ONE LAYER - READ and WRITE
					diff - Anything you/app write in container - it reside here.
					merged - THis place is merged of all layers and diff

merged  -----> ITS SHOWN INTO CONTAINER.
===================================================
Who is doing this merge?
	- union mount

Rule of Merging?
==========================
When there is conflict in layers - TOP LAYER ALWAYS WIN.


WHERE IS IMAGE Layer's IS BEING STORED?
---------------------------
Docker Root Dir: /var/lib/docker/ Storage Driver: overlay2

wHERE IS IMAGE META IS BEING STORED?
---------------------------
/var/lib/docker/image

Each layer is IDENTIFIED by UNIQUE HASH created by SHA256. - 40 Char
-------
Each layer has their parent layer.
When you call child - parent auto come....

==================================================================================
I want to deve a image with SoftagX	Softagy
================================
				War file
					Tomcat
						java
						 	rootfs
============================================================
App1  - java + Tomcat + War file = 1 LAYER

rootfs -->> Container - java + Tomcat + War file
===============================================
	Image - 2 

App2  - java + Tomcat + War file = Multiple
===================================
rootfs -->> Container ->java - One Image
Image - 2 

  399  docker history ubuntu
  400  docker inspect ubuntu


================================
ROOTFS
	j4  j5 	j6 j7 j8
	-------------------
	1 2  3   4    5
================================
How to create images?
=================================

1. Using Existing container - Lazy way
-------------------------------------------
ub-git-apache
====================
	
 463  ls
  464  docker ps
  465  docker commit -a"Rajesh kumar" -m"ub-git-ap-tom-j" 118cd350747e ub-git-ap-tom-j

docker commit -a"Rajesh kumar" -m"ub-git-ap-tom-j" 118cd350747e ub-git-ap-tom-j:1.6
  466  docker images
  467  docker history ubuntu
  468  docker history ub-git-ap-tom-j
  469  cea
  470  clear
  471  docker images
  472  docker run -itd ub-git-ap-tom-j
  473  docker ps
  474  docker exec e8ab5996c371 git
  475  clear


LAB -  
Write a image 1 - with centos + jre + httpd(Enable)
Write a image 2 - with ubuntu + jre + apache2(Enable)
==========================================================

How to Share a Images?
==========================
	using tar bal

 525  clear
  526  docker images
  527  docker save -o ub-git-ap-tom-j.tar ub-git-ap-tom-j
  528  ls
  529  clear
 557  clear
  554  docker imaes
  555  docker images
  556  docker rmi ub-git-ap-tom-j
  557  clear
  558  docker images
  559  ls
  560  docker load -i ub-git-ap-tom-j.tar
  561  clear



	using public registry
 567  ls
  568  docker images
  569  docker info
  570  clear
  571  docker login
  572  docker images
  573  docker push ub-git
  574  clear
  575  docker imates
  576  docker images
  577  docker tag ub-git scmgalaxy/malay
  578  docker images
  579  docker push scmgalaxy/malay
  580  clear
  581  docker images
  582  history


	using pvt registry









==========================================================
2. Using Dockerfile - Automated way
==========================================================
==========================================================
dockerfile is file...
	has many instructons....
--------------------------------------
instructon	input

FROM ubuntu
MAINTAINER Rajesh kumar devops@rajeshkumar.xyz
RUN apt-get update
RUN apt-get install git -y
RUN apt-get install openjdk-8-jre -y

docker build -t docefileimage1 .

===============================
rule of dockerfile
=================================
1. each line of dockerfile would create one layer.
2. Each line would create one layer but ROOTFS would be "FROM"

FROM ubuntu
MAINTAINER Rajesh kumar devops@rajeshkumar.xyz
RUN touch /opt/rajeshx.txt
RUN touch /opt/rajeshy.txt
RUN touch /opt/rajeshx.txt

docker build -f docker1 -t docefileimage2 .
==============================================

linux-core rootfs
	===========
			apps

=============================================
FROM ubuntu
MAINTAINER Rajesh kumar devops@rajeshkumar.xyz
RUN touch /opt/rajeshx.txt
RUN touch /opt/rajeshy.txt
COPY devopsschool.txt /tmp
ENV JAVA_HOME=/tmp
RUN useradd -d /tmp rajesh
USER rajesh


docker build -f docker2 -t docefileimage3 .

https://github.com/jenkinsci/docker/blob/587b2856cd225bb152c4abeeaaa24934c75aa460/Dockerfile
===========================================================
https://www.devopsschool.com/blog/top-10-containerdocker-monitoring-solutions-and-tools-in-2018/



FROM ubuntu
MAINTAINER Rajesh kumar devops@rajeshkumar.xyz
RUN touch /opt/rajeshx.txt
RUN dsdsdsd /opt/rajeshy.txt
RUN touch /opt/rajeshy.txt

===========================================================
MOST IMPORTANT
===========================================================
What should be PID 1?
==========================
CMD 
ENTRYPOINT

CMD 	VS ENTRYPOINT
========================
CMD can be replaced
ENTRYPOINT can not be replaced

param passed to ENTRYPOINT  get appende to a command of ENTRYPOINT 
	----
	/bin/tini", "--", "/usr/local/bin/jenkins.sh

	docker run jenkins ls
	/bin/tini", "--", "/usr/local/bin/jenkins.sh ls


FROM ubuntu
MAINTAINER Rajesh kumar devops@rajeshkumar.xyz
RUN touch /opt/rajeshx.txt
RUN dsdsdsd /opt/rajeshy.txt
RUN touch /opt/rajeshy.txt
ENTRYPOINT echo Welcome to Docker

https://www.devopsschool.com/tutorial/docker/dockerfile/dockerfile-example-sample-lab.html







